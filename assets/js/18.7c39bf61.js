(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{404:function(e,t,a){"use strict";a.r(t);var s=a(18),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"css深入理解之flexbox"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css深入理解之flexbox"}},[e._v("#")]),e._v(" CSS深入理解之Flexbox")]),e._v(" "),a("p",[e._v("Flexbox Layout 的本质是给容器伸缩/排序元素的能力，以分配空白区域。")]),e._v(" "),a("p",[e._v("Flexbox Layout是一组组合属性，容器container和子项item分别有一系列属性")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://css-tricks.com/wp-content/uploads/2018/11/00-basic-terminology.svg",alt:"A diagram explaining flexbox terminology. The size across the main axis of flexbox is called the main size, the other direction is the cross size. Those sizes have a main start, main end, cross start, and cross end."}})]),e._v(" "),a("h2",{attrs:{id:"container"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#container"}},[e._v("#")]),e._v(" container")]),e._v(" "),a("p",[a("code",[e._v("display: flex/inline-flex")]),e._v(" - 定义一个flexbox容器")]),e._v(" "),a("p",[a("code",[e._v("flex-direction: row/row-reverse/column/column-reverse")]),e._v(" - 定义容器主轴方向")]),e._v(" "),a("p",[a("code",[e._v("flex-wrap: no-wrap/wrap/wrap-reverse")]),e._v(" - 定义主轴上的折行行为")]),e._v(" "),a("p",[a("code",[e._v("flex-flow: flex-direction || flex-wrap")]),e._v(" - 组合语法")]),e._v(" "),a("p",[a("code",[e._v("justify-content: flex-start/flex-end/center/space-between/space-around/space-evently")]),e._v(" - 定义主轴剩余空白区域分配策略")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("space-between")]),e._v(" - 两头对齐，中间均分")]),e._v(" "),a("li",[a("code",[e._v("space-around")]),e._v(" - 元素周围分配的空间相等")]),e._v(" "),a("li",[a("code",[e._v("space-evently")]),e._v(" - 元素之间的间隔相等")])]),e._v(" "),a("p",[a("code",[e._v("align-items: flex-start/flex-end/center/stretch/baseline")]),e._v(" - 定义侧轴剩余空白区域分配策略")]),e._v(" "),a("p",[a("code",[e._v("align-content:stretch/flex-start/flex-end/center/space-between/space-around")]),e._v(" - 定义行间剩余空白区域分配策略")]),e._v(" "),a("h2",{attrs:{id:"item"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#item"}},[e._v("#")]),e._v(" item")]),e._v(" "),a("p",[a("code",[e._v("flex-grow: 0/number")]),e._v(" - 子项伸展权重")]),e._v(" "),a("p",[a("code",[e._v("flex-shrink: 1/number")]),e._v(" - 子项收缩权重")]),e._v(" "),a("p",[a("code",[e._v("flex-basis: content/px/rem/50%..")]),e._v(" - 子项内容块大小")]),e._v(" "),a("p",[a("code",[e._v("order: 0/number")]),e._v(" - 子项排序位列，可负值")]),e._v(" "),a("p",[a("code",[e._v("align-self")]),e._v(" - 子项侧轴剩余空白区域分配策略")]),e._v(" "),a("p",[a("code",[e._v("flex: flex-grow || flex-shrink || flex-basis")]),e._v(" - 组合语法，默认值0 1 auto")]),e._v(" "),a("h2",{attrs:{id:"示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[e._v("#")]),e._v(" 示例")]),e._v(" "),a("ul",[a("li",[e._v("在flexbox中，子项设置margin: auto，margin降吸收空白区域，使子项完全剧中")]),e._v(" "),a("li",[e._v("结合媒体查询实现自适应")])]),e._v(" "),a("h2",{attrs:{id:"qa"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#qa"}},[e._v("#")]),e._v(" QA")]),e._v(" "),a("ul",[a("li",[e._v("如何用flex实现多行子项空白一致的效果？")])])])}),[],!1,null,null,null);t.default=r.exports}}]);